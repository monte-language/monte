#!/usr/bin/env python
import sys, os
path = os.path.abspath(sys.argv[0])
while os.path.dirname(path) != path:
    if os.path.exists(os.path.join(path, 'monte', '__init__.py')):
        sys.path.insert(0, path)
        break
    path = os.path.dirname(path)

try:
    from monte.runtime.load import eval as monte_eval, monteImport
    # from monte.repl import startRepl
except ImportError:
    import_error_message = """Failed to import a required Python module. 
    Is everything in requirements.txt installed and available?
    """
    print >> sys.stderr, import_error_message
    exit(-1)

# startRepl()
from monte.runtime.scope import bootScope, createSafeScope
safeScope = createSafeScope(bootScope)
scriptScope = safeScope.copy()
scriptScope["import"] = monteImport(safeScope)
if len(sys.argv) > 1:
    if sys.argv[1] == "-c":
        # Compile-only mode!
        source = open(sys.argv[2]).read()
        from monte.parser import parse
        from monte.expander import expand
        from monte.ast import dump
        ast = expand(parse(source))
        sys.stdout.write(dump(ast))
    else:
        monte_eval(open(sys.argv[1]).read(), scriptScope)
